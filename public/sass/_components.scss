// TITLES
.container--title {
  margin: 7.6rem 0 0 0;
  position: relative;

  .title--1 {
    position: relative;
    font-family: $font-main;
    font-size: 3.2rem;
    color: $color-purple;
  }

  &:before {
    content: '';
    border-top: 0.85rem solid $color-blue;
    width: 120%;
    position: absolute;
    top: 57%;
    left: -10%;
    right: 0;
    bottom: 0;
  }

  @include respond(game-mode) {
    margin: 3rem 0;
  }
}

.title--2 {
  // margin-bottom: 2rem;
  font-size: 3.2rem;
  font-weight: 800;
  color: $color-blue;
  text-align: center;
}

.title--3 {
  font-size: 3.2rem;
  font-weight: 800;
  color: $color-blue;
}

.container--paragraph-small {
  @include centered;
  font-size: 2rem;
  margin-bottom: 5rem;
}

///
// FORMS
///
.container--form {
  width: 100vw;

  @include centered; // df fxdc jcc aic
  .form {
    &__columns {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: center;
      flex-wrap: wrap;
      width: 100%;

      .form__group {
        &:not(:last-of-type) {
          margin-right: 8rem;

          @include respond(px950) {
            margin-right: 0;
          }
        }
      }
    }

    &__group {
      @include centered; // df fxdc jcc aic
    }

    &__inputs {
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: flex-start;

      .forgot-password {
        align-self: flex-end;
        margin-top: 1rem;
        font-size: 1.2rem;
        color: $color-pink;
      }
      &:not(:last-of-type) {
        margin-bottom: 3.6rem;
      }
    }

    &__label {
      margin-left: 1.5rem;
      margin-bottom: 0.9rem;
      font-size: 1.4rem;
      font-weight: 600;
      text-transform: uppercase;
    }

    &__input {
      height: 5rem;
      width: 36rem;
      // border-radius: 2.5rem;
      border: 1px solid $color-light-grey;
      padding-left: 2rem;
      outline: none;

      @include respond(game-mode) {
        width: 30rem;
      }
    }
    &__input:focus {
      border: 2px solid $color-black;
    }

    &__input.valid {
      border: 2px solid $color-blue;
    }
    &__input.invalid {
      border: 2px solid $color-pink;
    }

    .validation-message {
      position: absolute;
      color: $color-pink;
      left: 2rem;
      top: 8.2rem;
      font-size: 1.2rem;
    }

    &__change {
      color: $color-grey;
      font-family: $font-secondary;
      font-size: 1.6rem;
      font-weight: 600;
      margin-top: 2rem;

      a {
        color: $color-pink;
      }
    }
  }

  .form--update {
    margin-bottom: 7.6rem;
  }

  @include respond(px950) {
    max-width: 40rem;
  }
}

// FORM-2

//CALL TO ACTION
.container--cta {
  margin-bottom: 10rem;
  .cta {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    &__button {
      @include centered; // df fxdc jcc aic
      cursor: pointer;

      height: 5rem;
      width: 13.6rem;
      margin-top: 6.4rem;
      font-family: $font-main;
      font-size: 2rem;
      font-weight: 800;
      color: $color-white;
      background-color: $color-blue;
      border-radius: 2.5rem;
      border: none;

      a {
        color: $color-white;
      }

      &:not(:last-of-type) {
        margin-right: 2rem;
      }
    }
  }
}

footer {
  align-self: flex-end;

  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;

  height: 4rem;
  width: 100%;
  border: 1px solid $color-light-grey;
  font-family: OpenSans;
  padding: 1rem 0;

  text-transform: uppercase;
  margin-top: 10rem;
}

///
// ALERT
///
.alert {
  @include centered; // df fxdc jcc aic
  background-color: $color-white;
  position: fixed;
  top: 0rem;
  left: 0;
  height: 4rem;
  width: 100vw;
  font-size: 2rem;
}

.alert--success {
  color: $color-blue;
  border-top: 1px solid $color-blue;
  border-bottom: 1px solid $color-blue;
}

.alert--error {
  border-top: 1px solid red;
  border-bottom: 1px solid red;
  color: red;
}

.hidden {
  display: none !important;
}

// POINTS
.container__points {
  display: flex;
  flex-direction: row;
  align-items: center;

  .minus,
  .plus {
    margin-right: 0.5rem;
  }

  .points-value {
    font-size: 3rem;
    font-family: $font-secondary;
    font-weight: bold;
    width: 2rem;
    text-align: right;
  }
}

.tooltip-container {
  display: none;
  position: absolute;
  height: 2rem;
  width: 12rem;
  @supports (width: max-content) {
    width: max-content;
  }
  left: 0;
  background-color: $color-white;

  .tooltip {
    color: $color-grey;
    font-size: 1.25rem;
  }
}

.tooltip-container.tooltip-container--right {
  left: initial;
  right: 0;
}

.btn--settings,
.hide-settings-btn,
.settings-btn,
.end-game-btn,
.exit-game-btn {
  position: relative;

  .tooltip-container {
    top: 5rem;
  }

  &:hover {
    .tooltip-container {
      display: block;
    }
  }
}

.btn--settings {
  .tooltip-container {
    top: 5.1rem;
  }
}

// copied save animation
@keyframes blink {
  /**
   * At the start of the animation the dot
   * has an opacity of .2
   */
  0% {
    opacity: 0.2;
  }
  /**
   * At 20% the dot is fully visible and
   * then fades out slowly
   */
  20% {
    opacity: 1;
  }
  /**
   * Until it reaches an opacity of .2 and
   * the animation can start again
   */
  100% {
    opacity: 0.2;
  }
}

.loading {
  margin-left: 2rem;
  font-size: 2rem;
  font-family: $font-main;
}

.loading span {
  /**
   * Use the blink animation, which is defined above
   */
  animation-name: blink;
  /**
   * The animation should take 1.4 seconds
   */
  animation-duration: 1.4s;
  /**
   * It will repeat itself forever
   */
  animation-iteration-count: infinite;
  /**
   * This makes sure that the starting style (opacity: .2)
   * of the animation is applied before the animation starts.
   * Otherwise we would see a short flash or would have
   * to set the default styling of the dots to the same
   * as the animation. Same applies for the ending styles.
   */
  animation-fill-mode: both;
}

.loading span:nth-child(2) {
  /**
   * Starts the animation of the third dot
   * with a delay of .2s, otherwise all dots
   * would animate at the same time
   */
  animation-delay: 0.2s;
}

.loading span:nth-child(3) {
  /**
   * Starts the animation of the third dot
   * with a delay of .4s, otherwise all dots
   * would animate at the same time
   */
  animation-delay: 0.4s;
}

.m-l {
  margin: 10rem;
}

.mt-l {
  margin-top: 10rem;
}
